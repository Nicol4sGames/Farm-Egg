--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + ((v44 - 1) % #v25), 1 + ((v44 - 1) % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
			if (1 == v26) then
				return v5(v27);
			end
		end
	end
	local v8 = _G[v7("\231\230\35\202\198\228\246\251", "\147\137\77\191\171\134")];
	local v9 = _G[v7("\98\103\63\31\211\24", "\17\19\77\118\189\127")][v7("\63\177\161\31", "\93\200\213\122\78\39\161\107")];
	local v10 = _G[v7("\192\181\146\225\121\67", "\179\193\224\136\23\36\173")][v7("\30\203\197\89", "\125\163\164\43\171\152\143\116")];
	local v11 = _G[v7("\22\14\164\212\140\2", "\101\122\214\189\226")][v7("\48\238\239", "\67\155\141\223\211\16\232")];
	local v12 = _G[v7("\73\96\180\86\171\93", "\58\20\198\63\197")][v7("\217\219\77\225", "\190\168\56\131\44\28")];
	local v13 = _G[v7("\73\60\64\240\85\252", "\58\72\50\153\59\155\108\144")][v7("\26\164\80", "\104\193\32\58\190\195\83\233")];
	local v14 = _G[v7("\148\246\166\94\20", "\224\151\196\50\113\102\177\116")][v7("\124\217\130\250\160\107", "\31\182\236\153\193")];
	local v15 = _G[v7("\27\184\127\16\30", "\111\217\29\124\123")][v7("\179\210\37\36\149\174", "\218\188\86\65\231")];
	local v16 = _G[v7("\186\41\12\182", "\215\72\120\222")][v7("\39\201\226\56\67", "\75\173\135\64\51")];
	local v17 = _G[v7("\175\120\153\19\39\166\107", "\200\29\237\117\66")] or function()
		return _ENV;
	end;
	local v18 = _G[v7("\255\39\151\205\197\202\165\248\35\129\204\197", "\140\66\227\160\160\190\196")];
	local v19 = _G[v7("\152\248\227\240\129", "\232\155\130\156\237\106")];
	local v20 = _G[v7("\205\91\143\163\220\73", "\190\62\227\198\191\61")];
	local v21 = _G[v7("\148\248\104\250\142\67", "\225\150\24\155\237\40")] or _G[v7("\249\18\30\92\58", "\141\115\124\48\95\114\24\42")][v7("\85\65\197\9\32\46", "\32\47\181\104\67\69\162\54")];
	local v22 = _G[v7("\185\91\60\1\46\175\81\32", "\205\52\82\116\67")];
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 2) then
				v37 = nil;
				v38 = nil;
				v39 = nil;
				v30 = 3;
			end
			if (v30 == 4) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (3 == v45) then
							if (v31 == 1) then
								local v46 = 0;
								while true do
									if (v46 == 1) then
										v35 = nil;
										v31 = 2;
										break;
									end
									if (v46 == 0) then
										v34 = nil;
										function v34(v54, v55, v56)
											if v56 then
												local v100 = 0;
												local v101;
												local v102;
												while true do
													if (v100 == 1) then
														while true do
															if (v101 == 0) then
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		v102 = (v54 / ((2 + (906 - (499 + 148 + (1029 - 770)))) ^ (v55 - ((810 - (677 + 131)) - 1)))) % ((2 + 0) ^ (((v56 - 1) - (v55 - (568 - ((912 - (185 + 288)) + (521 - (1392 - 999)))))) + (2 - (1287 - (23 + 1263)))));
																		return v102 - (v102 % (4 - (1 + 2)));
																	end
																end
															end
														end
														break;
													end
													if (v100 == 0) then
														v101 = 0 - 0;
														v102 = nil;
														v100 = 1;
													end
												end
											else
												local v103 = 0;
												local v104;
												local v105;
												while true do
													if (v103 == 0) then
														v104 = 0;
														v105 = nil;
														v103 = 1;
													end
													if (1 == v103) then
														while true do
															if ((0 - 0) == v104) then
																local v119 = 0;
																while true do
																	if (v119 == 0) then
																		v105 = 2 ^ (v55 - (2 - 1));
																		return (((v54 % (v105 + v105)) >= v105) and ((2 - 1) + 0 + 0)) or (0 + 0);
																	end
																end
															end
														end
														break;
													end
												end
											end
										end
										v46 = 1;
									end
								end
							end
							if (7 == v31) then
								local v47 = 0;
								while true do
									if (v47 == 0) then
										function v43(v57, v58, v59)
											local v60 = 0;
											local v61;
											local v62;
											local v63;
											local v64;
											while true do
												if (v60 == 1) then
													v63 = nil;
													v64 = nil;
													v60 = 2;
												end
												if (v60 == 2) then
													while true do
														local v111 = 0;
														while true do
															if (0 == v111) then
																if (1 == v61) then
																	local v121 = 0;
																	while true do
																		if (v121 == 0) then
																			v64 = v57[2 + 1];
																			return function(...)
																				local v144 = 0;
																				local v145;
																				local v146;
																				local v147;
																				local v148;
																				local v149;
																				local v150;
																				while true do
																					if (v144 == 0) then
																						v145 = 0;
																						v146 = nil;
																						v144 = 1;
																					end
																					if (v144 == 2) then
																						v149 = nil;
																						v150 = nil;
																						v144 = 3;
																					end
																					if (v144 == 3) then
																						while true do
																							if (v145 == 0) then
																								local v171 = 0;
																								while true do
																									if (v171 == 0) then
																										v146 = 1 + 0;
																										v147 = -(3 - 2);
																										v171 = 1;
																									end
																									if (1 == v171) then
																										v145 = 1;
																										break;
																									end
																								end
																							end
																							if (v145 == 1) then
																								local v172 = 0;
																								while true do
																									if (v172 == 0) then
																										v148 = {...};
																										v149 = v20("#", ...) - (1 + 0);
																										v172 = 1;
																									end
																									if (1 == v172) then
																										v145 = 2;
																										break;
																									end
																								end
																							end
																							if (v145 == 3) then
																								_G['A'], _G['B'] = v41(v19(v150));
																								if not _G['A'][1] then
																									local v177 = 0;
																									local v178;
																									local v179;
																									while true do
																										if (v177 == 1) then
																											while true do
																												if (v178 == 0) then
																													v179 = v57[10 - (6 + 0)][v146] or "?";
																													error(v7("\96\123\104\189\103\96\172\86\106\104\187\101\52\237\71\56\65", "\51\24\26\212\23\20\140") .. v179 .. v7("\59\252", "\102\198\106\169\219") .. _G['A'][2 - 0]);
																													break;
																												end
																											end
																											break;
																										end
																										if (v177 == 0) then
																											v178 = 0;
																											v179 = nil;
																											v177 = 1;
																										end
																									end
																								else
																									return v21(_G['A'], 3 - 1, _G['B']);
																								end
																								break;
																							end
																							if (v145 == 2) then
																								local v173 = 0;
																								while true do
																									if (v173 == 0) then
																										v150 = nil;
																										function v150()
																											local v185 = 0;
																											local v186;
																											local v187;
																											local v188;
																											local v189;
																											local v190;
																											local v191;
																											local v192;
																											local v193;
																											local v194;
																											local v195;
																											while true do
																												if (1 == v185) then
																													v190 = {};
																													v191 = {};
																													v192 = {};
																													for v196 = 0, v149 do
																														if (v196 >= v188) then
																															v190[v196 - v188] = v148[v196 + (2 - 1)];
																														else
																															v192[v196] = v148[v196 + 1];
																														end
																													end
																													v185 = 2;
																												end
																												if (2 == v185) then
																													v193 = (v149 - v188) + (1260 - (1107 + 152));
																													v194 = nil;
																													v195 = nil;
																													while true do
																														local v197 = 0;
																														local v198;
																														while true do
																															if (v197 == 0) then
																																v198 = 0;
																																while true do
																																	if (v198 == 1) then
																																		if (v195 <= (1093 - (813 + 260))) then
																																			if (v195 <= (3 + 6)) then
																																				if (v195 <= ((32 - 23) - 5)) then
																																					if (v195 <= 1) then
																																						if (v195 == (0 + 0)) then
																																							local v224 = 0;
																																							local v225;
																																							local v226;
																																							local v227;
																																							local v228;
																																							local v229;
																																							while true do
																																								if (v224 == 2) then
																																									v229 = nil;
																																									while true do
																																										if (v225 == 0) then
																																											local v323 = 0;
																																											while true do
																																												if (v323 == 1) then
																																													v225 = 1;
																																													break;
																																												end
																																												if (v323 == 0) then
																																													v226 = v194[1262 - (1213 + 47)];
																																													v227, v228 = v189(v192[v226](v21(v192, v226 + (457 - (185 + 271)), v147)));
																																													v323 = 1;
																																												end
																																											end
																																										end
																																										if (v225 == 1) then
																																											local v324 = 0;
																																											while true do
																																												if (v324 == 0) then
																																													v147 = (v228 + v226) - ((1437 + 416) - ((520 - 336) + 483 + 1185));
																																													v229 = 0 + 0 + 0;
																																													v324 = 1;
																																												end
																																												if (1 == v324) then
																																													v225 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (2 == v225) then
																																											for v346 = v226, v147 do
																																												local v347 = 0;
																																												local v348;
																																												while true do
																																													if (v347 == 0) then
																																														v348 = 0;
																																														while true do
																																															if (v348 == 0) then
																																																v229 = v229 + (1 - 0);
																																																v192[v346] = v227[v229];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (0 == v224) then
																																									v225 = 0;
																																									v226 = nil;
																																									v224 = 1;
																																								end
																																								if (v224 == 1) then
																																									v227 = nil;
																																									v228 = nil;
																																									v224 = 2;
																																								end
																																							end
																																						elseif (v192[v194[(556 - (484 + 18)) - ((1923 - (1669 + 233)) + 31)]] ~= v194[4]) then
																																							v146 = v146 + (1 - (0 + 0));
																																						else
																																							v146 = v194[(184 + 1482) - (723 + 940)];
																																						end
																																					elseif (v195 <= (196 - (21 + 142 + 31))) then
																																						if (v192[v194[1225 - (32 + 1191)]] == v194[1 + 3]) then
																																							v146 = v146 + (1473 - ((2026 - 1340) + (3127 - 2341)));
																																						else
																																							v146 = v194[10 - 7];
																																						end
																																					elseif (v195 > (11 - 8)) then
																																						if (v194[1 + 1 + 0] == v192[v194[4]]) then
																																							v146 = v146 + 1;
																																						else
																																							v146 = v194[3];
																																						end
																																					elseif (v192[v194[1524 - (577 + 945)]] == v192[v194[2 + 2]]) then
																																						v146 = v146 + 1;
																																					else
																																						v146 = v194[3];
																																					end
																																				elseif (v195 <= (16 - 10)) then
																																					if (v195 > (686 - (631 + 50))) then
																																						v192[v194[993 - (448 + 543)]] = v192[v194[6 - 3]] % v194[826 - (26 + 796)];
																																					else
																																						local v231 = 0;
																																						local v232;
																																						local v233;
																																						local v234;
																																						local v235;
																																						while true do
																																							if (v231 == 0) then
																																								v232 = 0;
																																								v233 = nil;
																																								v231 = 1;
																																							end
																																							if (v231 == 2) then
																																								while true do
																																									if (v232 == 0) then
																																										local v325 = 0;
																																										while true do
																																											if (v325 == 1) then
																																												v232 = 1;
																																												break;
																																											end
																																											if (v325 == 0) then
																																												v233 = v187[v194[3]];
																																												v234 = nil;
																																												v325 = 1;
																																											end
																																										end
																																									end
																																									if (v232 == 2) then
																																										for v349 = 1 + 0, v194[19 - 15] do
																																											local v350 = 0;
																																											local v351;
																																											local v352;
																																											while true do
																																												if (v350 == 1) then
																																													while true do
																																														if (v351 == 0) then
																																															local v396 = 0;
																																															while true do
																																																if (v396 == 1) then
																																																	v351 = 1;
																																																	break;
																																																end
																																																if (0 == v396) then
																																																	v146 = v146 + (1846 - (740 + 820 + 285));
																																																	v352 = v186[v146];
																																																	v396 = 1;
																																																end
																																															end
																																														end
																																														if (v351 == 1) then
																																															if (v352[1] == 28) then
																																																v235[v349 - 1] = {v192,v352[3]};
																																															else
																																																v235[v349 - (184 - (17 + 166))] = {v58,v352[1178 - (769 + 406)]};
																																															end
																																															v191[#v191 + 1 + 0] = v235;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																												if (0 == v350) then
																																													v351 = 0;
																																													v352 = nil;
																																													v350 = 1;
																																												end
																																											end
																																										end
																																										v192[v194[(956 - (614 + 336)) - 4]] = v43(v233, v234, v59);
																																										break;
																																									end
																																									if (v232 == 1) then
																																										local v327 = 0;
																																										while true do
																																											if (v327 == 1) then
																																												v232 = 2;
																																												break;
																																											end
																																											if (v327 == 0) then
																																												v235 = {};
																																												v234 = v18({}, {[v7("\180\208\6\244\179\207\239", "\235\143\111\154\215\170\151\151")]=function(v372, v373)
																																													local v374 = 0;
																																													local v375;
																																													local v376;
																																													while true do
																																														if (v374 == 1) then
																																															while true do
																																																if (0 == v375) then
																																																	local v405 = 0;
																																																	while true do
																																																		if (v405 == 0) then
																																																			v376 = v235[v373];
																																																			return v376[1][v376[126 - ((215 - 117) + (77 - 51))]];
																																																		end
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																														if (v374 == 0) then
																																															v375 = 0;
																																															v376 = nil;
																																															v374 = 1;
																																														end
																																													end
																																												end,[v7("\241\2\219\116\217\52\219\117\203\37", "\174\93\181\17")]=function(v377, v378, v379)
																																													local v380 = 0;
																																													local v381;
																																													local v382;
																																													while true do
																																														if (v380 == 0) then
																																															v381 = 0;
																																															v382 = nil;
																																															v380 = 1;
																																														end
																																														if (v380 == 1) then
																																															while true do
																																																if (v381 == 0) then
																																																	v382 = v235[v378];
																																																	v382[(1122 - (155 + 964)) - 2][v382[2]] = v379;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end});
																																												v327 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v231 == 1) then
																																								v234 = nil;
																																								v235 = nil;
																																								v231 = 2;
																																							end
																																						end
																																					end
																																				elseif (v195 <= ((2746 - 971) - (845 + 508 + 415))) then
																																					local v236 = 0;
																																					local v237;
																																					local v238;
																																					local v239;
																																					local v240;
																																					while true do
																																						if (v236 == 0) then
																																							v237 = 0;
																																							v238 = nil;
																																							v236 = 1;
																																						end
																																						if (v236 == 2) then
																																							while true do
																																								if (v237 == 1) then
																																									v240 = v192[v238 + (3 - 1)];
																																									if (v240 > (0 + (0 - 0))) then
																																										if (v239 > v192[v238 + (541 - (309 + 231))]) then
																																											v146 = v194[434 - (123 + 308)];
																																										else
																																											v192[v238 + 3 + 0] = v239;
																																										end
																																									elseif (v239 < v192[v238 + (2 - 1)]) then
																																										v146 = v194[1 + 2];
																																									else
																																										v192[v238 + (93 - (24 + 66))] = v239;
																																									end
																																									break;
																																								end
																																								if (0 == v237) then
																																									local v329 = 0;
																																									while true do
																																										if (1 == v329) then
																																											v237 = 1;
																																											break;
																																										end
																																										if (v329 == 0) then
																																											v238 = v194[2];
																																											v239 = v192[v238];
																																											v329 = 1;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (v236 == 1) then
																																							v239 = nil;
																																							v240 = nil;
																																							v236 = 2;
																																						end
																																					end
																																				elseif (v195 == 8) then
																																					for v317 = v194[2], v194[6 - 3] do
																																						v192[v317] = nil;
																																					end
																																				else
																																					local v288 = 0;
																																					local v289;
																																					local v290;
																																					local v291;
																																					local v292;
																																					while true do
																																						if (v288 == 0) then
																																							v289 = 0;
																																							v290 = nil;
																																							v288 = 1;
																																						end
																																						if (v288 == 1) then
																																							v291 = nil;
																																							v292 = nil;
																																							v288 = 2;
																																						end
																																						if (v288 == 2) then
																																							while true do
																																								if (0 == v289) then
																																									local v359 = 0;
																																									while true do
																																										if (v359 == 0) then
																																											v290 = v194[5 - 3];
																																											v291 = v192[v290 + (1621 - (686 + 933))];
																																											v359 = 1;
																																										end
																																										if (v359 == 1) then
																																											v289 = 1;
																																											break;
																																										end
																																									end
																																								end
																																								if (v289 == 2) then
																																									if (v291 > (0 + (0 - 0))) then
																																										if (v292 <= v192[v290 + 1]) then
																																											local v390 = 0;
																																											local v391;
																																											while true do
																																												if (v390 == 0) then
																																													v391 = 0;
																																													while true do
																																														if (0 == v391) then
																																															v146 = v194[7 - 4];
																																															v192[v290 + (6 - 3)] = v292;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																									elseif (v292 >= v192[v290 + (1 - 0)]) then
																																										local v392 = 0;
																																										local v393;
																																										while true do
																																											if (v392 == 0) then
																																												v393 = 0;
																																												while true do
																																													if (v393 == 0) then
																																														v146 = v194[3];
																																														v192[v290 + (1278 - (684 + 591))] = v292;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v289 == 1) then
																																									local v360 = 0;
																																									while true do
																																										if (v360 == 0) then
																																											v292 = v192[v290] + v291;
																																											v192[v290] = v292;
																																											v360 = 1;
																																										end
																																										if (v360 == 1) then
																																											v289 = 2;
																																											break;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																			elseif (v195 <= 14) then
																																				if (v195 <= ((779 - (57 + 711)) + 0)) then
																																					if (v195 == (1925 - (510 + 1405))) then
																																						v192[v194[5 - (3 - 0)]]();
																																					else
																																						v192[v194[1496 - (1300 + 194)]][v192[v194[943 - (530 + 410)]]] = v192[v194[4]];
																																					end
																																				elseif (v195 <= (476 - (355 + 109))) then
																																					v192[v194[1 + (890 - (888 + 1))]] = #v192[v194[(267 + 153) - (19 + 10 + 369 + 19)]];
																																				elseif (v195 == 13) then
																																					v192[v194[2]][v192[v194[(1 + 3) - 1]]] = v194[1 + 3];
																																				else
																																					do
																																						return;
																																					end
																																				end
																																			elseif (v195 <= (56 - 39)) then
																																				if (v195 <= 15) then
																																					local v244 = 0;
																																					local v245;
																																					local v246;
																																					local v247;
																																					local v248;
																																					local v249;
																																					while true do
																																						if (v244 == 1) then
																																							v247 = nil;
																																							v248 = nil;
																																							v244 = 2;
																																						end
																																						if (v244 == 0) then
																																							v245 = 0;
																																							v246 = nil;
																																							v244 = 1;
																																						end
																																						if (v244 == 2) then
																																							v249 = nil;
																																							while true do
																																								if (v245 == 1) then
																																									local v330 = 0;
																																									while true do
																																										if (0 == v330) then
																																											v147 = (v248 + v246) - 1;
																																											v249 = 980 - (301 + 679);
																																											v330 = 1;
																																										end
																																										if (v330 == 1) then
																																											v245 = 2;
																																											break;
																																										end
																																									end
																																								end
																																								if (v245 == 0) then
																																									local v331 = 0;
																																									while true do
																																										if (1 == v331) then
																																											v245 = 1;
																																											break;
																																										end
																																										if (v331 == 0) then
																																											v246 = v194[(777 - (425 + 350)) + (0 - 0)];
																																											v247, v248 = v189(v192[v246](v192[v246 + ((697 - (583 + 112)) - 1)]));
																																											v331 = 1;
																																										end
																																									end
																																								end
																																								if (v245 == 2) then
																																									for v353 = v246, v147 do
																																										local v354 = 0;
																																										local v355;
																																										while true do
																																											if (0 == v354) then
																																												v355 = 0;
																																												while true do
																																													if (0 == v355) then
																																														v249 = v249 + 1;
																																														v192[v353] = v247[v249];
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				elseif (v195 > (62 - 46)) then
																																					v192[v194[(534 + 270) - (90 + 712)]] = {};
																																				else
																																					local v296 = 0;
																																					local v297;
																																					local v298;
																																					while true do
																																						if (v296 == 1) then
																																							while true do
																																								if (v297 == 0) then
																																									v298 = v194[(2 + 2) - (1 + 1)];
																																									v192[v298](v21(v192, v298 + 1 + 0 + 0 + 0, v194[7 - 4]));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (0 == v296) then
																																							v297 = 0;
																																							v298 = nil;
																																							v296 = 1;
																																						end
																																					end
																																				end
																																			elseif (v195 <= ((21 + 48) - (2 + 49))) then
																																				v192[v194[(8 + 0) - 6]] = v192[v194[3 + 0 + 0]] - v194[4];
																																			elseif (v195 > 19) then
																																				v192[v194[2]] = v194[3] + v192[v194[2 + 2]];
																																			elseif not v192[v194[2]] then
																																				v146 = v146 + 1;
																																			else
																																				v146 = v194[3];
																																			end
																																		elseif (v195 <= 30) then
																																			if (v195 <= (45 - 20)) then
																																				if (v195 <= (15 + 7)) then
																																					if (v195 == 21) then
																																						v59[v194[3]] = v192[v194[1 + 1 + (1214 - (628 + 586))]];
																																					else
																																						local v253 = 0;
																																						local v254;
																																						local v255;
																																						while true do
																																							if (v253 == 1) then
																																								while true do
																																									if (0 == v254) then
																																										v255 = v194[2 + 0];
																																										do
																																											return v192[v255](v21(v192, v255 + ((175 + 564) - (367 + 193 + 178)), v194[3]));
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v253 == 0) then
																																								v254 = 0;
																																								v255 = nil;
																																								v253 = 1;
																																							end
																																						end
																																					end
																																				elseif (v195 <= 23) then
																																					local v256 = 0;
																																					local v257;
																																					local v258;
																																					local v259;
																																					while true do
																																						if (v256 == 0) then
																																							v257 = 0;
																																							v258 = nil;
																																							v256 = 1;
																																						end
																																						if (1 == v256) then
																																							v259 = nil;
																																							while true do
																																								if (v257 == 1) then
																																									v192[v258 + 1] = v259;
																																									v192[v258] = v259[v194[4]];
																																									break;
																																								end
																																								if (v257 == 0) then
																																									local v336 = 0;
																																									while true do
																																										if (v336 == 1) then
																																											v257 = 1;
																																											break;
																																										end
																																										if (v336 == 0) then
																																											v258 = v194[(2585 - 2025) - (124 + 434)];
																																											v259 = v192[v194[(601 - (166 + 434)) + (5 - 3)]];
																																											v336 = 1;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				elseif (v195 > 24) then
																																					if v192[v194[2]] then
																																						v146 = v146 + ((21 + 1026) - (589 + 457));
																																					else
																																						v146 = v194[3];
																																					end
																																				else
																																					v192[v194[2 + 0]][v194[3 + 0]] = v192[v194[610 - (162 + 30 + 109 + 305)]];
																																				end
																																			elseif (v195 <= (1820 - (316 + 1447 + 30))) then
																																				if (v195 > 26) then
																																					v192[v194[(1842 - (70 + 97)) - ((1281 - 773) + 1010 + 155)]] = v194[(3 + 11) - (2 + 9)];
																																				else
																																					local v262 = 0;
																																					local v263;
																																					local v264;
																																					while true do
																																						if (v262 == 1) then
																																							while true do
																																								if (v263 == 0) then
																																									v264 = v194[(1527 - (27 + 1497)) - (1471 - (1352 + 118))];
																																									v192[v264] = v192[v264](v21(v192, v264 + (2 - 1), v194[3]));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v262 == 0) then
																																							v263 = 0;
																																							v264 = nil;
																																							v262 = 1;
																																						end
																																					end
																																				end
																																			elseif (v195 <= (55 - 27)) then
																																				v192[v194[2]] = v192[v194[3]];
																																			elseif (v195 > (9 + 11 + 9)) then
																																				v146 = v194[3];
																																			else
																																				v192[v194[2]] = v192[v194[3]][v192[v194[4]]];
																																			end
																																		elseif (v195 <= 35) then
																																			if (v195 <= 32) then
																																				if (v195 == (15 + 16 + 0)) then
																																					local v267 = 0;
																																					local v268;
																																					local v269;
																																					local v270;
																																					local v271;
																																					local v272;
																																					while true do
																																						if (0 == v267) then
																																							v268 = 0;
																																							v269 = nil;
																																							v267 = 1;
																																						end
																																						if (2 == v267) then
																																							v272 = nil;
																																							while true do
																																								if (v268 == 1) then
																																									local v339 = 0;
																																									while true do
																																										if (v339 == 1) then
																																											v268 = 2;
																																											break;
																																										end
																																										if (0 == v339) then
																																											v147 = (v271 + v269) - (1 + 0);
																																											v272 = 1286 - ((447 - 126) + (2393 - (733 + 695)));
																																											v339 = 1;
																																										end
																																									end
																																								end
																																								if (v268 == 0) then
																																									local v340 = 0;
																																									while true do
																																										if (v340 == 0) then
																																											v269 = v194[2 + 0];
																																											v270, v271 = v189(v192[v269](v21(v192, v269 + ((2726 - 1882) - (367 + 296 + 22 + 158)), v194[12 - 9])));
																																											v340 = 1;
																																										end
																																										if (1 == v340) then
																																											v268 = 1;
																																											break;
																																										end
																																									end
																																								end
																																								if (v268 == 2) then
																																									for v356 = v269, v147 do
																																										local v357 = 0;
																																										local v358;
																																										while true do
																																											if (v357 == 0) then
																																												v358 = 0;
																																												while true do
																																													if (v358 == 0) then
																																														v272 = v272 + 1;
																																														v192[v356] = v270[v272];
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (1 == v267) then
																																							v270 = nil;
																																							v271 = nil;
																																							v267 = 2;
																																						end
																																					end
																																				else
																																					local v273 = 0;
																																					local v274;
																																					local v275;
																																					while true do
																																						if (0 == v273) then
																																							v274 = 0;
																																							v275 = nil;
																																							v273 = 1;
																																						end
																																						if (v273 == 1) then
																																							while true do
																																								if (v274 == 0) then
																																									v275 = v194[6 - (3 + 1)];
																																									v192[v275](v192[v275 + (668 - (422 + 245))]);
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																			elseif (v195 <= (544 - (304 + 47 + 160))) then
																																				local v276 = 0;
																																				local v277;
																																				local v278;
																																				while true do
																																					if (v276 == 0) then
																																						v277 = 0;
																																						v278 = nil;
																																						v276 = 1;
																																					end
																																					if (v276 == 1) then
																																						while true do
																																							if (v277 == 0) then
																																								v278 = v194[3 - 1];
																																								v192[v278] = v192[v278](v21(v192, v278 + (658 - (134 + 523)), v147));
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			elseif (v195 == (98 - (190 - 126))) then
																																				v192[v194[2]] = v192[v194[3]] % v192[v194[2 + 1 + (2 - 1)]];
																																			else
																																				local v306 = 0;
																																				local v307;
																																				local v308;
																																				while true do
																																					if (v306 == 1) then
																																						while true do
																																							if (v307 == 0) then
																																								v308 = v194[2];
																																								do
																																									return v21(v192, v308, v147);
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v306 == 0) then
																																						v307 = 0;
																																						v308 = nil;
																																						v306 = 1;
																																					end
																																				end
																																			end
																																		elseif (v195 <= (80 - 42)) then
																																			if (v195 <= 36) then
																																				local v279 = 0;
																																				local v280;
																																				local v281;
																																				while true do
																																					if (v279 == 1) then
																																						while true do
																																							if (v280 == 0) then
																																								v281 = v194[2];
																																								v192[v281] = v192[v281]();
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v279 == 0) then
																																						v280 = 0;
																																						v281 = nil;
																																						v279 = 1;
																																					end
																																				end
																																			elseif (v195 == (148 - 111)) then
																																				local v309 = 0;
																																				local v310;
																																				local v311;
																																				while true do
																																					if (1 == v309) then
																																						while true do
																																							if (v310 == 0) then
																																								v311 = v194[1775 - (1206 + (1493 - 926))];
																																								v192[v311](v21(v192, v311 + (206 - (100 + (1430 - (665 + 660)))), v147));
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v309 == 0) then
																																						v310 = 0;
																																						v311 = nil;
																																						v309 = 1;
																																					end
																																				end
																																			else
																																				v192[v194[2]] = v192[v194[4 - 1]] + v194[(251 + 751) - (418 + (1127 - (157 + 390)))];
																																			end
																																		elseif (v195 <= ((4837 - 3522) - ((2067 - (443 + 650)) + 302))) then
																																			v192[v194[(1 - 0) + (1915 - (1563 + 351))]] = v59[v194[(1312 - (221 + 280)) - ((337 - 162) + 633)]];
																																		elseif (v195 == 40) then
																																			v192[v194[47 - (17 + 28)]] = v192[v194[3]][v194[8 - (1 + 3)]];
																																		else
																																			v192[v194[2]] = v58[v194[8 - 5]];
																																		end
																																		v146 = v146 + (4 - 3);
																																		break;
																																	end
																																	if (0 == v198) then
																																		local v215 = 0;
																																		while true do
																																			if (v215 == 1) then
																																				v198 = 1;
																																				break;
																																			end
																																			if (0 == v215) then
																																				v194 = v186[v146];
																																				v195 = v194[1 - 0];
																																				v215 = 1;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v185 == 0) then
																													v186 = v62;
																													v187 = v63;
																													v188 = v64;
																													v189 = v41;
																													v185 = 1;
																												end
																											end
																										end
																										v173 = 1;
																									end
																									if (v173 == 1) then
																										v145 = 3;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																					if (v144 == 1) then
																						v147 = nil;
																						v148 = nil;
																						v144 = 2;
																					end
																				end
																			end;
																		end
																	end
																end
																if (v61 == 0) then
																	local v122 = 0;
																	while true do
																		if (v122 == 0) then
																			v62 = v57[1];
																			v63 = v57[2];
																			v122 = 1;
																		end
																		if (v122 == 1) then
																			v61 = 1;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v60 == 0) then
													v61 = 0;
													v62 = nil;
													v60 = 1;
												end
											end
										end
										return v43(v42(), {}, v29)(...);
									end
								end
							end
							break;
						end
						if (v45 == 2) then
							if (v31 == 5) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										v40 = v37;
										v41 = nil;
										v48 = 1;
									end
									if (v48 == 1) then
										function v41(...)
											return {...}, v20("#", ...);
										end
										v31 = 6;
										break;
									end
								end
							end
							if (v31 == 3) then
								local v49 = 0;
								while true do
									if (v49 == 0) then
										v37 = nil;
										function v37()
											local v65 = 0;
											local v66;
											local v67;
											local v68;
											local v69;
											local v70;
											while true do
												if (v65 == 0) then
													v66 = 0;
													v67 = nil;
													v65 = 1;
												end
												if (v65 == 2) then
													v70 = nil;
													while true do
														local v112 = 0;
														while true do
															if (v112 == 0) then
																if (v66 == (1 + 0)) then
																	return (v70 * (47143820 - 30366604)) + (v69 * ((545167 - 303029) - ((178972 - (641 + 691)) - (324 + 218 + (1203 - 707))))) + (v68 * (504 - 248)) + v67;
																end
																if (v66 == (0 - 0)) then
																	local v123 = 0;
																	while true do
																		if (v123 == 1) then
																			v66 = 1 + 0;
																			break;
																		end
																		if (v123 == 0) then
																			v67, v68, v69, v70 = v9(v28, v32, v32 + (1243 - (1215 + 25)));
																			v32 = v32 + (1 - 0) + 3;
																			v123 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v65 == 1) then
													v68 = nil;
													v69 = nil;
													v65 = 2;
												end
											end
										end
										v49 = 1;
									end
									if (v49 == 1) then
										v38 = nil;
										v31 = 4;
										break;
									end
								end
							end
							v45 = 3;
						end
						if (v45 == 0) then
							if (v31 == 4) then
								local v50 = 0;
								while true do
									if (v50 == 1) then
										function v39(v71)
											local v72 = 0;
											local v73;
											local v74;
											local v75;
											while true do
												if (v72 == 0) then
													v73 = 0;
													v74 = nil;
													v72 = 1;
												end
												if (v72 == 1) then
													v75 = nil;
													while true do
														local v113 = 0;
														while true do
															if (v113 == 1) then
																if (v73 == 0) then
																	local v124 = 0;
																	while true do
																		if (v124 == 0) then
																			v74 = nil;
																			if not v71 then
																				local v166 = 0;
																				local v167;
																				while true do
																					if (v166 == 0) then
																						v167 = 0 - 0;
																						while true do
																							if (v167 == (0 + 0)) then
																								v71 = v37();
																								if (v71 == (0 + ((0 + 0) - 0))) then
																									return "";
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v124 = 1;
																		end
																		if (v124 == 1) then
																			v73 = 1;
																			break;
																		end
																	end
																end
																if (v73 == (1 + 2)) then
																	return v14(v75);
																end
																break;
															end
															if (v113 == 0) then
																if (v73 == (794 - (84 + 708))) then
																	local v125 = 0;
																	while true do
																		if (v125 == 0) then
																			v75 = {};
																			for v151 = 1856 - (1728 + 127), #v74 do
																				v75[v151] = v10(v9(v11(v74, v151, v151)));
																			end
																			v125 = 1;
																		end
																		if (v125 == 1) then
																			v73 = 3;
																			break;
																		end
																	end
																end
																if (v73 == (3 - 2)) then
																	local v126 = 0;
																	while true do
																		if (v126 == 1) then
																			v73 = 2;
																			break;
																		end
																		if (0 == v126) then
																			v74 = v11(v28, v32, (v32 + v71) - (588 - (268 + 319)));
																			v32 = v32 + v71;
																			v126 = 1;
																		end
																	end
																end
																v113 = 1;
															end
														end
													end
													break;
												end
											end
										end
										v31 = 5;
										break;
									end
									if (v50 == 0) then
										function v38()
											local v76 = 0;
											local v77;
											local v78;
											local v79;
											local v80;
											local v81;
											local v82;
											local v83;
											while true do
												if (0 == v76) then
													v77 = 0;
													v78 = nil;
													v76 = 1;
												end
												if (v76 == 1) then
													v79 = nil;
													v80 = nil;
													v76 = 2;
												end
												if (v76 == 2) then
													v81 = nil;
													v82 = nil;
													v76 = 3;
												end
												if (v76 == 3) then
													v83 = nil;
													while true do
														local v114 = 0;
														while true do
															if (v114 == 1) then
																if (v77 == (10 - 7)) then
																	local v127 = 0;
																	while true do
																		if (v127 == 0) then
																			if (v82 == ((546 - ((99 - 62) + (1448 - 939))) + (0 - (0 + 0)))) then
																				if (v81 == (0 + 0 + 0 + (0 - 0))) then
																					return v83 * (0 + (35 - (7 + 28)));
																				else
																					local v169 = 0;
																					local v170;
																					while true do
																						if (v169 == 0) then
																							v170 = 0;
																							while true do
																								if (v170 == (446 - (269 + 177))) then
																									v82 = 1 + ((699 + 540) - (1030 + 209));
																									v80 = 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			elseif (v82 == ((2812 - 1836) + 1071)) then
																				return ((v81 == (0 - (1743 - (1345 + 398)))) and (v83 * (((4 - 3) + (0 - 0)) / (0 - ((1478 - (26 + 1452)) - 0))))) or (v83 * NaN);
																			end
																			return v16(v83, v82 - ((3589 - (311 + 821)) - (695 + 313 + 426))) * (v80 + (v81 / (2 ^ (49 + 3))));
																		end
																	end
																end
																if (1 == v77) then
																	local v128 = 0;
																	while true do
																		if (v128 == 1) then
																			v77 = 2;
																			break;
																		end
																		if (v128 == 0) then
																			v80 = 1 + 0;
																			v81 = (v34(v79, (3633 - (464 + 1203)) - ((1148 - (668 + 378)) + 1863), 14 + 6) * ((2 - 0) ^ (87 - 55))) + v78;
																			v128 = 1;
																		end
																	end
																end
																break;
															end
															if (0 == v114) then
																if (v77 == 0) then
																	local v129 = 0;
																	while true do
																		if (v129 == 0) then
																			v78 = v37();
																			v79 = v37();
																			v129 = 1;
																		end
																		if (v129 == 1) then
																			v77 = 1;
																			break;
																		end
																	end
																end
																if (v77 == 2) then
																	local v130 = 0;
																	while true do
																		if (v130 == 0) then
																			v82 = v34(v79, (907 - ((2289 - (1277 + 304)) + 146 + 0)) - ((372 - 244) - (196 - 100)), 31);
																			v83 = ((v34(v79, 12 + 20) == (4 - 3)) and -((661 - (514 + 146)) + 0)) or (1 - (0 - 0));
																			v130 = 1;
																		end
																		if (v130 == 1) then
																			v77 = 107 - (87 + 17);
																			break;
																		end
																	end
																end
																v114 = 1;
															end
														end
													end
													break;
												end
											end
										end
										v39 = nil;
										v50 = 1;
									end
								end
							end
							if (2 == v31) then
								local v51 = 0;
								while true do
									if (v51 == 0) then
										function v35()
											local v84 = 0;
											local v85;
											local v86;
											while true do
												if (v84 == 0) then
													v85 = 0;
													v86 = nil;
													v84 = 1;
												end
												if (v84 == 1) then
													while true do
														local v115 = 0;
														while true do
															if (v115 == 0) then
																if (v85 == 0) then
																	local v131 = 0;
																	while true do
																		if (v131 == 1) then
																			v85 = 1;
																			break;
																		end
																		if (v131 == 0) then
																			v86 = v9(v28, v32, v32);
																			v32 = v32 + (1 - 0);
																			v131 = 1;
																		end
																	end
																end
																if (v85 == 1) then
																	return v86;
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v36 = nil;
										v51 = 1;
									end
									if (v51 == 1) then
										function v36()
											local v87 = 0;
											local v88;
											local v89;
											local v90;
											while true do
												if (v87 == 1) then
													v90 = nil;
													while true do
														local v116 = 0;
														while true do
															if (0 == v116) then
																if ((265 - (186 + 79)) == v88) then
																	local v132 = 0;
																	while true do
																		if (v132 == 1) then
																			v88 = 2 - 1;
																			break;
																		end
																		if (0 == v132) then
																			v89, v90 = v9(v28, v32, v32 + 2 + 0);
																			v32 = v32 + 2;
																			v132 = 1;
																		end
																	end
																end
																if (v88 == (2 - 1)) then
																	return (v90 * (445 - 189)) + v89;
																end
																break;
															end
														end
													end
													break;
												end
												if (v87 == 0) then
													v88 = 0;
													v89 = nil;
													v87 = 1;
												end
											end
										end
										v31 = 3;
										break;
									end
								end
							end
							v45 = 1;
						end
						if (v45 == 1) then
							if (v31 == 0) then
								local v52 = 0;
								while true do
									if (v52 == 1) then
										v28 = v12(v11(v28, 2 + 3), v7("\75\127", "\101\81\199\95\53\101"), function(v91)
											if (v9(v91, 2) == 79) then
												local v106 = 0;
												local v107;
												while true do
													if (0 == v106) then
														v107 = 0;
														while true do
															if (v107 == 0) then
																local v120 = 0;
																while true do
																	if (v120 == 0) then
																		v33 = v8(v11(v91, 1, 1 + 0));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v108 = 0;
												local v109;
												local v110;
												while true do
													if (v108 == 0) then
														v109 = 0;
														v110 = nil;
														v108 = 1;
													end
													if (v108 == 1) then
														while true do
															if (v109 == 0) then
																v110 = v10(v8(v91, 16));
																if v33 then
																	local v137 = 0;
																	local v138;
																	local v139;
																	while true do
																		if (v137 == 1) then
																			while true do
																				local v168 = 0;
																				while true do
																					if (v168 == 0) then
																						if (v138 == 0) then
																							local v174 = 0;
																							while true do
																								if (1 == v174) then
																									v138 = 1;
																									break;
																								end
																								if (v174 == 0) then
																									v139 = v13(v110, v33);
																									v33 = nil;
																									v174 = 1;
																								end
																							end
																						end
																						if (1 == v138) then
																							return v139;
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if (v137 == 0) then
																			v138 = 0;
																			v139 = nil;
																			v137 = 1;
																		end
																	end
																else
																	return v110;
																end
																break;
															end
														end
														break;
													end
												end
											end
										end);
										v31 = 1;
										break;
									end
									if (v52 == 0) then
										v32 = 3 - 2;
										v33 = nil;
										v52 = 1;
									end
								end
							end
							if (6 == v31) then
								local v53 = 0;
								while true do
									if (v53 == 0) then
										v42 = nil;
										function v42()
											local v92 = 0;
											local v93;
											local v94;
											local v95;
											local v96;
											local v97;
											local v98;
											local v99;
											while true do
												if (v92 == 1) then
													v95 = nil;
													v96 = nil;
													v92 = 2;
												end
												if (v92 == 0) then
													v93 = 0;
													v94 = nil;
													v92 = 1;
												end
												if (3 == v92) then
													v99 = nil;
													while true do
														local v117 = 0;
														while true do
															if (v117 == 0) then
																if (v93 == 0) then
																	local v133 = 0;
																	while true do
																		if (v133 == 0) then
																			v94 = {};
																			v95 = {};
																			v133 = 1;
																		end
																		if (v133 == 1) then
																			v96 = {};
																			v93 = 1;
																			break;
																		end
																	end
																end
																if (2 == v93) then
																	local v134 = 0;
																	while true do
																		if (v134 == 1) then
																			for v153 = (1 + 0) - (0 - 0), v37() do
																				local v154 = 0;
																				local v155;
																				local v156;
																				while true do
																					if (v154 == 1) then
																						while true do
																							if (v155 == 0) then
																								v156 = v35();
																								if (v34(v156, (1 + 2) - (1726 - (1436 + 288)), (660 - (421 + 237)) - 1) == (0 - 0)) then
																									local v180 = 0;
																									local v181;
																									local v182;
																									local v183;
																									local v184;
																									while true do
																										if (v180 == 1) then
																											v183 = nil;
																											v184 = nil;
																											v180 = 2;
																										end
																										if (v180 == 2) then
																											while true do
																												if (v181 == 2) then
																													local v199 = 0;
																													while true do
																														if (v199 == 1) then
																															v181 = 3;
																															break;
																														end
																														if (v199 == 0) then
																															if (v34(v183, 1 + 0, 947 - (158 + 788)) == (1 + 0)) then
																																v184[2] = v99[v184[2]];
																															end
																															if (v34(v183, 2, 2 - 0) == (1 + 0)) then
																																v184[3] = v99[v184[161 - (49 + 14 + 95)]];
																															end
																															v199 = 1;
																														end
																													end
																												end
																												if (v181 == 1) then
																													local v200 = 0;
																													while true do
																														if (v200 == 1) then
																															v181 = 2;
																															break;
																														end
																														if (v200 == 0) then
																															v184 = {v36(),v36(),nil,nil};
																															if (v182 == (0 + 0)) then
																																local v213 = 0;
																																local v214;
																																while true do
																																	if (v213 == 0) then
																																		v214 = 0;
																																		while true do
																																			if (v214 == 0) then
																																				v184[5 - (1 + 1)] = v36();
																																				v184[925 - (436 + 485)] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v182 == (2 - 1)) then
																																v184[3] = v37();
																															elseif (v182 == (1063 - (361 + 700))) then
																																v184[3] = v37() - (((2265 - (1183 + 672)) - ((141 - (4 + 115)) + 386)) ^ (9 + 4 + 2 + 1));
																															elseif (v182 == 3) then
																																local v222 = 0;
																																local v223;
																																while true do
																																	if (v222 == 0) then
																																		v223 = 0;
																																		while true do
																																			if (v223 == 0) then
																																				v184[3] = v37() - ((5 - 3) ^ (28 - 12));
																																				v184[4] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v200 = 1;
																														end
																													end
																												end
																												if (v181 == 0) then
																													local v201 = 0;
																													while true do
																														if (v201 == 0) then
																															v182 = v34(v156, 2, 3);
																															v183 = v34(v156, 18 - (4 + 10), 6);
																															v201 = 1;
																														end
																														if (v201 == 1) then
																															v181 = 1;
																															break;
																														end
																													end
																												end
																												if (v181 == 3) then
																													if (v34(v183, 3, 3 + 0) == ((2308 - (115 + 687)) - ((2176 - (1348 + 451)) + 1128))) then
																														v184[4] = v99[v184[4]];
																													end
																													v94[v153] = v184;
																													break;
																												end
																											end
																											break;
																										end
																										if (v180 == 0) then
																											v181 = 0;
																											v182 = nil;
																											v180 = 1;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v154 == 0) then
																						v155 = 0;
																						v156 = nil;
																						v154 = 1;
																					end
																				end
																			end
																			v93 = 3;
																			break;
																		end
																		if (v134 == 0) then
																			for v157 = (262 + 37) - ((1936 - (1612 + 63)) + 37), v98 do
																				local v158 = 0;
																				local v159;
																				local v160;
																				local v161;
																				while true do
																					if (0 == v158) then
																						v159 = 0;
																						v160 = nil;
																						v158 = 1;
																					end
																					if (v158 == 1) then
																						v161 = nil;
																						while true do
																							if (v159 == 0) then
																								local v175 = 0;
																								while true do
																									if (0 == v175) then
																										v160 = v35();
																										v161 = nil;
																										v175 = 1;
																									end
																									if (v175 == 1) then
																										v159 = 1;
																										break;
																									end
																								end
																							end
																							if (v159 == 1) then
																								if (v160 == (740 - (299 + 175 + (1175 - 910)))) then
																									v161 = v35() ~= (0 - (1711 - (1055 + 656)));
																								elseif (v160 == (2 + 0)) then
																									v161 = v38();
																								elseif (v160 == (8 - (1256 - (1043 + 208)))) then
																									v161 = v39();
																								end
																								v99[v157] = v161;
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v97[3] = v35();
																			v134 = 1;
																		end
																	end
																end
																v117 = 1;
															end
															if (v117 == 1) then
																if (v93 == 3) then
																	local v135 = 0;
																	while true do
																		if (v135 == 0) then
																			for v162 = 52 - (17 + 34), v37() do
																				v95[v162 - ((1246 - (1140 + 105)) + 0)] = v42();
																			end
																			for v164 = 1 + (424 - (371 + 53)), v37() do
																				v96[v164] = v37();
																			end
																			v135 = 1;
																		end
																		if (v135 == 1) then
																			return v97;
																		end
																	end
																end
																if (v93 == 1) then
																	local v136 = 0;
																	while true do
																		if (v136 == 0) then
																			v97 = {v94,v95,nil,v96};
																			v98 = v37();
																			v136 = 1;
																		end
																		if (1 == v136) then
																			v99 = {};
																			v93 = 2;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v92 == 2) then
													v97 = nil;
													v98 = nil;
													v92 = 3;
												end
											end
										end
										v53 = 1;
									end
									if (v53 == 1) then
										v43 = nil;
										v31 = 7;
										break;
									end
								end
							end
							v45 = 2;
						end
					end
				end
				break;
			end
			if (v30 == 3) then
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 4;
			end
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v30 = 1;
			end
			if (1 == v30) then
				v34 = nil;
				v35 = nil;
				v36 = nil;
				v30 = 2;
			end
		end
	end
	v23("LOL!", v17(), ...);
end
